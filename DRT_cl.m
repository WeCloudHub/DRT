function DRT_cl(varargin)
% add the paths
% -------------
DRTpath = which('DRT_cl.m');
DRTpath = DRTpath(1:end-length('DRT_cl.m'));
if strcmpi(DRTpath, './') || strcmpi(DRTpath, '.\')
    DRTpath = [ pwd filesep ];
end;

combs_project_id=1;

SubFlag='0';
CompressFlag='1';
All2setFlag='0';
GenDescriptionFlag='1';
SameFileNameFlag='0';

WindowSeconds=1;
HighPassband=1;
seleChanns='all';
badWindowThreshold=0.4;
robustDeviationThreshold=5;
PowerFrequency=50;
FrequencyNoiseThreshold=3;
flagNotchFilter=0;
correlationThreshold=0.6;
ransacCorrelationThreshold=[];
ransacChannelFraction=0.3;
ransacSampleSize=50;

ArrangeFlag='0';
CaptureType_Flag='2';
KeyWord=' ';
srate=[];
ChanlocsFile=[];
    
InputPath=varargin{1};
OutputPath=varargin{2};
  
Mode=varargin{3}; % 1:SEDS 2:QA  3:SEDS->QA

%~isempty(varargin{i}) 

i=4;
while i<nargin 
    switch varargin{i}
        case '-s'
            if isequal(Mode,'2')
                error('The error of input paramters has occured'); 
            end 

            SubFlag=varargin{i+1};      % 0
            CompressFlag=varargin{i+2}; % 1
            All2setFlag=varargin{i+3};  % 0
            GenDescriptionFlag=varargin{i+4}; % 1
            SameFileNameFlag=varargin{i+5}; % 0
            i=i+6;

        case '-q'
            if isequal(Mode,'1')
                error('The error of input paramters has occured'); 
            end       
            
            WindowSeconds=varargin{i+1};   % 1
            HighPassband=varargin{i+2};    % 1
            seleChanns=varargin{i+3};     % 'all'
            badWindowThreshold=varargin{i+4}; % 0.4
            robustDeviationThreshold=varargin{i+5}; % 5
            PowerFrequency=varargin{i+6};  % 50
            FrequencyNoiseThreshold=varargin{i+7}; % 3
            flagNotchFilter=varargin{i+8}; %0
            correlationThreshold=varargin{i+9}; % 0.6
            ransacCorrelationThreshold=varargin{i+10}; % []
            ransacChannelFraction=varargin{i+11}; % 0.3
            ransacSampleSize=varargin{i+12};  % 50           
            i=i+13;

        case '-c'
            ArrangeFlag=varargin{i+1} 
            CaptureType_Flag=varargin{i+2} 
            KeyWord=varargin{i+3} 
            i=i+4;
            
        case '-o'    
            srate=varargin{i+1} ;
            ChanlocsFile=varargin{i+2}; 
            i=i+3;
        otherwise    
            error('The error of input paramters has occured'); 
    end
end

if isequal(Mode,'1')
    wb_EEGfiles_Standardization(...
    InputPath,...
    OutputPath,...
    SubFlag,...
    CompressFlag,...
    All2setFlag,...
    GenDescriptionFlag,...
    SameFileNameFlag,...
    ArrangeFlag,...
    CaptureType_Flag,...
    KeyWord,...
    srate,...
    ChanlocsFile);
elseif isequal(Mode,'2')
    QA_InputFile=wb_EEGfiles_Search(InputPath);
    wb_pipeline_EEG_QA(...
    QA_InputFile,...
    OutputPath,...
    combs_project_id,...
    WindowSeconds,...
    HighPassband,...
    seleChanns,...
    badWindowThreshold,...
    robustDeviationThreshold,...
    PowerFrequency,...
    FrequencyNoiseThreshold,...
    flagNotchFilter,...
    correlationThreshold,...
    ransacCorrelationThreshold,...
    ransacChannelFraction,...
    ransacSampleSize,...
    srate);
elseif isequal(Mode,'3')
    SEDS_OutputPath = [OutputPath,filesep,'SEDS'];
    mkdir(SEDS_OutputPath);
    wb_EEGfiles_Standardization(...
    InputPath,...
    SEDS_OutputPath,...
    SubFlag,...
    CompressFlag,...
    All2setFlag,...
    GenDescriptionFlag,...
    SameFileNameFlag,...
    ArrangeFlag,...
    CaptureType_Flag,...
    KeyWord,...
    srate,...
    ChanlocsFile);  

    QA_OutputPath = [OutputPath,filesep,'QA'];
    mkdir(QA_OutputPath);
    QA_InputFile=wb_EEGfiles_Search(SEDS_OutputPath);
    wb_pipeline_EEG_QA(...
    QA_InputFile,...
    QA_OutputPath,...
    combs_project_id,...
    WindowSeconds,...
    HighPassband,...
    seleChanns,...
    badWindowThreshold,...
    robustDeviationThreshold,...
    PowerFrequency,...
    FrequencyNoiseThreshold,...
    flagNotchFilter,...
    correlationThreshold,...
    ransacCorrelationThreshold,...
    ransacChannelFraction,...
    ransacSampleSize,...
    srate);

    if CaptureType_Flag=='3'; 
        QA_tablefile = [QA_OutputPath,filesep,'TaskID-1_QA_table.mat'];
        CaptureFilter_OutputPath = [OutputPath,filesep,'CaptureSEDS']; 
        mkdir(CaptureFilter_OutputPath);
        wb_EEGfiles_CaptureFilter(SEDS_OutputPath,CaptureFilter_OutputPath,QA_tablefile,ArrangeFlag,KeyWord) ;
    end
end

end